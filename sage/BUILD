package(
  default_visibility = ["//visibility:public"],
)

cc_library(
  name = "sage_io",
  hdrs = ["sage_io.h"],
  deps = [
  "//gbbs:bridge",
  "//gbbs:io",
  "//gbbs:graph",
  "//gbbs:graph_io",
  "//gbbs:macros",
  "//gbbs:vertex",
  "//pbbslib:sample_sort",
  "//pbbslib:stlalgs",
  "//pbbslib/strings:string_basics",
  ]
)

cc_library(
  name = "benchmark",
  hdrs = ["benchmark.h"],
  deps = [
  ":sage_io",
  "//gbbs:parse_command_line",
  ]
)

# main header for Sage
cc_library(
  name = "sage",
  hdrs = ["sage.h"],
  deps = [
    ":sage_io",
    ":benchmark",
    "//gbbs:gbbs",
    "//gbbs/semiasym:graph_filter",
  ]
)

load("@com_grail_bazel_compdb//:defs.bzl", "compilation_database")
load("@com_grail_bazel_output_base_util//:defs.bzl", "OUTPUT_BASE")

compilation_database(
  name = "compdb",
  targets = [
    "//gbbs:benchmark",
    "//gbbs:bridge",
    "//gbbs:bucket",
    "//gbbs:compressed_vertex",
    "//gbbs:contract",
    "//gbbs:edge_array",
    "//gbbs:edge_map_blocked",
    "//gbbs:edge_map_data",
    "//gbbs:edge_map_reduce",
    "//gbbs:edge_map_utils",
    "//gbbs:flags",
    "//gbbs:gbbs",
    "//gbbs:graph",
    "//gbbs:graph_io",
    "//gbbs:graph_mutation",
    "//gbbs:histogram",
    "//gbbs:interface",
    "//gbbs:io",
    "//gbbs:julienne",
    "//gbbs:macros",
    "//gbbs:parse_command_line",
    "//gbbs:sequential_ht",
    "//gbbs:speculative_for",
    "//gbbs:uncompressed_intersection",
    "//gbbs:undirected_edge",
    "//gbbs:union_find",
    "//gbbs:vertex",
    "//gbbs:vertex_subset",
    "//gbbs/encodings:byte",
    "//gbbs/encodings:byte_pd",
    "//gbbs/encodings:byte_pd_amortized",
    "//gbbs/encodings:decoders",
    "//gbbs/pbbslib:atomic_counter",
    "//gbbs/pbbslib:counting_sort_no_transpose",
    "//gbbs/pbbslib:dyn_arr",
    "//gbbs/pbbslib:resizable_table",
    "//gbbs/pbbslib:sparse_additive_map",
    "//gbbs/pbbslib:sparse_table",
    "//gbbs/semiasym:bitset",
    "//gbbs/semiasym:bitset_managers",
    "//gbbs/semiasym:graph_filter",
    "//gbbs/semiasym:utils",
    "//pbbslib:alloc",
    "//pbbslib:assert",
    "//pbbslib:bag",
    "//pbbslib:binary_search",
    "//pbbslib:bucket_sort",
    "//pbbslib:collect_reduce",
    "//pbbslib:concurrent_stack",
    "//pbbslib:counting_sort",
    "//pbbslib:get_time",
    "//pbbslib:hash_table",
    "//pbbslib:histogram",
    "//pbbslib:integer_sort",
    "//pbbslib:kth_smallest",
    "//pbbslib:list_allocator",
    "//pbbslib:memory_size",
    "//pbbslib:merge",
    "//pbbslib:merge_sort",
    "//pbbslib:monoid",
    "//pbbslib:numa_build",
    "//pbbslib:parallel",
    "//pbbslib:quicksort",
    "//pbbslib:random",
    "//pbbslib:random_shuffle",
    "//pbbslib:range_min",
    "//pbbslib:sample_sort",
    "//pbbslib:scheduler",
    "//pbbslib:seq",
    "//pbbslib:sequence",
    "//pbbslib:sequence_ops",
    "//pbbslib:sparse_mat_vec_mult",
    "//pbbslib:stlalgs",
    "//pbbslib:time_operations",
    "//pbbslib:transpose",
    "//pbbslib:utilities",
    "//pbbslib/strings:string_basics",
    "//pybindings:gbbs_lib.so",
    "//sage:benchmark",
    "//sage:sage",
    "//sage:sage_io",
    "//sage/benchmarks/ApproximateDensestSubgraph/SemiAsymmetric:DensestSubgraph_main",
    "//sage/benchmarks/Connectivity:Connectivity_main",
    "//sage/benchmarks/GraphColoring:GraphColoring_main",
    "//sage/benchmarks/IntegralWeightSSSP:wBFS_main",
    "//sage/benchmarks/KCore:KCore_main",
    "//sage/benchmarks/LowDiameterDecomposition:LowDiameterDecomposition_main",
    "//sage/benchmarks/MaximalIndependentSet:MaximalIndependentSet_main",
    "//sage/benchmarks/PageRank:PageRank_main",
    "//sage/benchmarks/SSBetweennessCentrality:SSBetweennessCentrality_main",
    "//sage/benchmarks/SSWidestPath:SSWidestPath_main",
    "//sage/benchmarks/Spanner:Spanner_main",
    "//sage/benchmarks/SpanningForest:SpanningForest_main",
    "//sage/benchmarks/TriangleCounting:Triangle",
    "//sage/benchmarks/TriangleCounting:Triangle_main",
  ],
  output_base = OUTPUT_BASE,
)
